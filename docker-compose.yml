networks:
  hubzilla:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

services:
  hub_db:
    container_name: hubzilla_database       # ARBITARY (user can/should change)
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      hubzilla:
        ipv4_address: 172.20.0.30
    volumes:
        - db_data:/var/lib/postgresql/data

  hub_web:
    container_name: hubzilla_webserver      # ARBITARY (user can/should change)
    image: nginx:1.25.3-alpine
    restart: unless-stopped
    depends_on:
      hub:
        condition: service_healthy
      hub_cron:
        condition: service_started
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: volume
        source: nginx_config
        target: /etc/nginx/conf.d
        read_only: true
      - type: volume
        source: ssl_certs
        target: /etc/nginx/ssl
        read_only: true
      - type: volume
        source: web_root
        target: /var/www/html
      - type: bind
        source: ./scripts/start-nginx.sh
        target: /usr/local/bin/start-nginx.sh
        read_only: true
    command: ["/usr/local/bin/start-nginx.sh"]
    networks:
      hubzilla:
        ipv4_address: 172.20.0.10

  hub:
    container_name: hubzilla_itself         # ARBITARY (user can/should change)
    build: .
    restart: unless-stopped
    depends_on:
      - hub_db
    env_file:
      - .env
    networks:
      hubzilla:
        ipv4_address: 172.20.0.20
    volumes:
      - type: volume
        source: web_root
        target: /var/www/html
      - type: volume
        source: ssl_certs
        target: /var/ssl-shared
      - type: volume
        source: nginx_config
        target: /var/nginx-config
      - type: bind
        source: ${MKCERT_PATH}
        target: /root/.local/share/mkcert
        read_only: true
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/nginx-config/default.conf || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  hub_cron:
    container_name: hubzilla_cronjob        # ARBITARY (user can/should change)
    build: .
    restart: unless-stopped
    depends_on:
      - hub_db
    env_file:
      - .env
    networks:
      hubzilla:
        ipv4_address: 172.20.0.40
    command: ["crond", "-f"]

  stalwart:
    container_name: hubzilla_mailserver
    image: stalwartlabs/stalwart:latest
    restart: unless-stopped
    depends_on:
      - hub
    ports:
      - "25:25"     # SMTP
      - "143:143"   # IMAP
      - "993:993"   # IMAPS
      - "465:465"   # SMTP over SSL
      - "587:587"   # SMTP submission
      - "8080:8080" # Web admin
    volumes:
      - type: volume
        source: stalwart_data
        target: /opt/stalwart
      - type: bind
        source: ./stalwart-config/config.toml
        target: /opt/stalwart/etc/config.toml
        read_only: true
      - type: volume
        source: ssl_certs
        target: /var/ssl-shared
        read_only: true
      - type: bind
        source: ./scripts/setup-stalwart-ssl.sh
        target: /usr/local/bin/setup-stalwart-ssl.sh
        read_only: true
      - type: bind
        source: ./scripts/stalwart-entrypoint.sh
        target: /usr/local/bin/stalwart-entrypoint.sh
        read_only: true
    entrypoint: ["/bin/bash", "/usr/local/bin/stalwart-entrypoint.sh"]
    environment:
      - STALWART_HOSTNAME=mail.${SMTP_DOMAIN}
      - STALWART_ADMIN_PASSWORD=${STALWART_ADMIN_PASSWORD}
      - DOMAIN=${DOMAIN}
    networks:
      hubzilla:
        ipv4_address: 172.20.0.50

volumes:
  db_data:
  web_root:
  ssl_certs:
  nginx_config:
  stalwart_data:
