networks:
  hubzilla:

services:
  hub_db:
    container_name: hubzilla_database       # ARBITARY (user can/should change)
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    #healthcheck:
    #  test: ["/usr/bin/mysql --user=${DB_USER} --password=${DB_PASSWORD} --execute \"SHOW DATABASES;\""]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 5
    networks:
      - hubzilla
    volumes:
        - db_data:/var/lib/postgresql/data

  hub_web:
    container_name: hubzilla_webserver      # ARBITARY (user can/should change)
    image: nginx:1.25.3-alpine
    restart: unless-stopped
    depends_on:
      hub:
        condition: service_healthy
      hub_cron:
        condition: service_started
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_config:/etc/nginx/conf.d:ro
      - ssl_certs:/etc/nginx/ssl:ro
      - web_root:/var/www/html:Z            # Retain the capital Z (SELinux permission issues)
    networks:
      - hubzilla

  hub:
    container_name: hubzilla_itself         # ARBITARY (user can/should change)
    build: .
    # image: "dhitchenor/hubzilla:${VER_FULL}"
    restart: unless-stopped
    depends_on:
      - hub_db
    env_file:
      - .env
    networks:
      - hubzilla
    volumes:
      - web_root:/var/www/html:Z            # Retain the capital Z (SELinux permission issues)
      - ssl_certs:/var/ssl-shared
      - nginx_config:/var/nginx-config
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/nginx-config/default.conf || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  hub_cron:
    container_name: hubzilla_cronjob        # ARBITARY (user can/should change)
    build: .
    # image: "dhitchenor/hubzilla:${VER_FULL}"
    restart: unless-stopped
    depends_on:
      - hub_db
    networks:
      - hubzilla
    command: ["crond", "-f"]

volumes:
  db_data:
  web_root:
  ssl_certs:
  nginx_config:
